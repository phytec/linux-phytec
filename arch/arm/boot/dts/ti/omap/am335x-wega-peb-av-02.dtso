// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (C) 2022 PHYTEC Messtechnik GmbH
 * Author: Dominik Haller <d.haller@phytec.de>
 */
/dts-v1/;
/plugin/;

#include <dt-bindings/pinctrl/am33xx.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/gpio/gpio.h>

&am33xx_pinmux {
	ecap2_pins: pinmux-ecap2 {
		pinctrl-single,pins = <
			AM33XX_IOPAD(AM335X_PIN_MCASP0_AHCLKR, PIN_OUTPUT | MUX_MODE4)		/* mcasp0_ahclkr.ecap2_in_pwm2_out	*/
		>;
	};

	lcd_pins: pinmux-lcd {
		pinctrl-single,pins = <
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA0, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA1, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA2, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA3, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA4, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA5, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA6, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA7, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA8, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA9, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA10, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA11, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA12, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA13, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA14, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_DATA15, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_GPMC_AD15, PIN_OUTPUT | MUX_MODE1)	/* gpmc_ad15.lcd_data16 */
			AM33XX_IOPAD(AM335X_PIN_GPMC_AD14, PIN_OUTPUT | MUX_MODE1)	/* gpmc_ad14.lcd_data17 */
			AM33XX_IOPAD(AM335X_PIN_GPMC_AD13, PIN_OUTPUT | MUX_MODE1)	/* gpmc_ad13.lcd_data18 */
			AM33XX_IOPAD(AM335X_PIN_GPMC_AD12, PIN_OUTPUT | MUX_MODE1)	/* gpmc_ad12.lcd_data19 */
			AM33XX_IOPAD(AM335X_PIN_GPMC_AD11, PIN_OUTPUT | MUX_MODE1)	/* gpmc_ad11.lcd_data20 */
			AM33XX_IOPAD(AM335X_PIN_GPMC_AD10, PIN_OUTPUT | MUX_MODE1)	/* gpmc_ad10.lcd_data21 */
			AM33XX_IOPAD(AM335X_PIN_GPMC_AD9, PIN_OUTPUT | MUX_MODE1)	/* gpmc_ad9.lcd_data22 */
			AM33XX_IOPAD(AM335X_PIN_GPMC_AD8, PIN_OUTPUT | MUX_MODE1)	/* gpmc_ad8.lcd_data23 */
			AM33XX_IOPAD(AM335X_PIN_LCD_VSYNC, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_HSYNC, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_PCLK, PIN_OUTPUT | MUX_MODE0)
			AM33XX_IOPAD(AM335X_PIN_LCD_AC_BIAS_EN, PIN_OUTPUT | MUX_MODE0)
		>;
	};

	ts_irq_pin: pinmux-ts-irq-pin {
		pinctrl-single,pins = <
			AM33XX_IOPAD(AM335X_PIN_GPMC_CSN1, PIN_INPUT_PULLUP | MUX_MODE7)	/* gpmc_csn1.x_av_int_gpio1_30	*/
		>;
	};
};

&epwmss2 {
	status = "okay";

	ecap2: pwm@100 {
		#pwm-cells = <3>;
		pinctrl-names = "default";
		pinctrl-0 = <&ecap2_pins>;
		status = "okay";
	};
};

&i2c0 {
	#address-cells = <1>;
	#size-cells = <0>;

	i2c_ts: touchscreen@38 {
		compatible = "edt,edt-ft5406";
		reg = <0x38>;
		pinctrl-names = "default";
		pinctrl-0 = <&ts_irq_pin>;
		interrupt-parent = <&gpio1>;
		interrupts = <30 IRQ_TYPE_NONE>;
	};
};

&lcdc {
	blue-and-red-wiring = "crossed";
	invert-pxl-clk;
	status = "okay";

	port {
		lcdc_out: endpoint@0 {
			remote-endpoint = <&panel_in>;
		};
	};

};

&{/}{
	backlight: backlight {
		compatible = "pwm-backlight";
		brightness-levels = <0 4 8 16 32 64 128 255>;
		default-brightness-level = <6>;
		power-supply = <&lcd_3v3>;
		pwms = <&ecap2 0 100000 0>;
	};

	lcd_3v3: fixedregulator-lcd {
		compatible = "regulator-fixed";
		regulator-name = "lcd_3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
	};

	panel: panel {
		compatible = "edt,etm0700g0edh6";
		pinctrl-names = "default";
		pinctrl-0 = <&lcd_pins>;
		backlight = <&backlight>;
		enable-gpios = <&gpio3 19 GPIO_ACTIVE_HIGH>;
		power-supply = <&lcd_3v3>;

		port {
			panel_in: endpoint@0 {
			remote-endpoint = <&lcdc_out>;
			};
		};
	};
};
