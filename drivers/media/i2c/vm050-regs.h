/*	--*- c -*--
 * Copyright (C) 2016 Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation; version 2 and/or (at your option) version 3 of the
 * License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef H_LINUX_DRIVERS_MEDIA_I2C_VM050_REGS_H
#define H_LINUX_DRIVERS_MEDIA_I2C_VM050_REGS_H


#define VM050_REG_SENSOR_TYPE			0x00
#  define VM050_FLD_SENSOR_TYPE_TYPE(_t)	((_t) << 0)
#  define VM050_FLD_SENSOR_TYPE_TYPE_msk	VM050_FLD_SENSOR_TYPE_TYPE(0xffu)
#  define VM050_FLD_SENSOR_TYPE_TYPE_HTPA32	VM050_FLD_SENSOR_TYPE_TYPE(1u)
#  define VM050_FLD_SENSOR_TYPE_TYPE_HTPA80	VM050_FLD_SENSOR_TYPE_TYPE(2u)
#  define VM050_FLD_SENSOR_TYPE_TABLE(_t)	((_t) << 8)
#  define VM050_FLD_SENSOR_TYPE_TABLE_msk	VM050_FLD_SENSOR_TYPE_TABLE(0xffu)
#  define VM050_FLD_SENSOR_TYPE_TABLE_get(_r)	(((_r) & VM050_FLD_SENSOR_TYPE_TABLE_msk) >> 8)

#define VM050_REG_FIRMARE			0x01
#  define VM050_FLD_FIRMWARE_MINOR(_m)		((_m) << 0)
#  define VM050_FLD_FIRMWARE_MINOR_msk		VM050_FLD_FIRMWARE_MINOR(0xffu)
#  define VM050_FLD_FIRMWARE_MINOR_get(_r)	(((_r) & VM050_FLD_FIRMWARE_MINOR_msk) >> 0)
#  define VM050_FLD_FIRMWARE_MAJOR(_m)		((_m) << 8)
#  define VM050_FLD_FIRMWARE_MAJOR_msk		VM050_FLD_FIRMWARE_MAJOR(0xffu)
#  define VM050_FLD_FIRMWARE_MAJOR_get(_r)	(((_r) & VM050_FLD_FIRMWARE_MAJOR_msk) >> 8)

#define VM050_REG_CONTROL1			0x02
#  define VM050_FLD_CONTROL1_ENABLE		BIT(0)
#  define VM050_FLD_CONTROL1_POWERON		BIT(1)
#  define VM050_FLD_CONTROL1_SENSOR_RESET	BIT(2)
#  define VM050_FLD_CONTROL1_MODULE_RESET	BIT(3)
#  define VM050_FLD_CONTROL1_PERFORMANCE	BIT(8)

#define VM050_REG_CONTROL2			0x03
#  define VM050_FLD_CONTROL2_MODE(_m)		((_m) << 0)
#  define VM050_FLD_CONTROL2_MODE_msk		VM050_FLD_CONTROL2_MODE(0xfu)
#  define VM050_FLD_CONTROL2_MODE_CONTINUOUS	VM050_FLD_CONTROL2_MODE(0u)
#  define VM050_FLD_CONTROL2_MODE_TRIGGER	VM050_FLD_CONTROL2_MODE(1u)
#  define VM050_FLD_CONTROL2_MODE_MANUAL	VM050_FLD_CONTROL2_MODE(2u)
#  define VM050_FLD_CONTROL2_STROBE(_m)		((_m) << 4)
#  define VM050_FLD_CONTROL2_STROBE_msk		VM050_FLD_CONTROL2_STROBE(0xfu)
#  define VM050_FLD_CONTROL2_STROBE_DISABLE	VM050_FLD_CONTROL2_STROBE(0u)
#  define VM050_FLD_CONTROL2_STROBE_ENABLE	VM050_FLD_CONTROL2_STROBE(1u)
#  define VM050_FLD_CONTROL2_AUTOSCALE(_m)	((_m) << 8)
#  define VM050_FLD_CONTROL2_AUTOSCALE_msk	VM050_FLD_CONTROL2_AUTOSCALE(0xfu)
#  define VM050_FLD_CONTROL2_AUTOSCALE_OFF	VM050_FLD_CONTROL2_AUTOSCALE(0u)
#  define VM050_FLD_CONTROL2_AUTOSCALE_FULL	VM050_FLD_CONTROL2_AUTOSCALE(1u)
#  define VM050_FLD_CONTROL2_AUTOSCALE_MIN	VM050_FLD_CONTROL2_AUTOSCALE(2u)
#  define VM050_FLD_CONTROL2_AUTOSCALE_MAX	VM050_FLD_CONTROL2_AUTOSCALE(3u)
#  define VM050_FLD_CONTROL2_AUTOSCALE_MEAN	VM050_FLD_CONTROL2_AUTOSCALE(4u)
#  define VM050_FLD_CONTROL2_AUTOSCALE_TEMP0	VM050_FLD_CONTROL2_AUTOSCALE(5u)
#  define VM050_FLD_CONTROL2_METERING(_m)	((_m) << 12)
#  define VM050_FLD_CONTROL2_METERING_msk	VM050_FLD_CONTROL2_METERING(0xfu)
#  define VM050_FLD_CONTROL2_METERING_IMG	VM050_FLD_CONTROL2_METERING(1u)
#  define VM050_FLD_CONTROL2_METERING_CENTER	VM050_FLD_CONTROL2_METERING(2u)
#  define VM050_FLD_CONTROL2_METERING_SPOT	VM050_FLD_CONTROL2_METERING(3u)

#define VM050_REG_CONTROL3			0x04
#  define VM050_FLD_CONTROL3_TEST(_p)		((_p) << 0)
#  define VM050_FLD_CONTROL3_TEST_msk		VM050_FLD_CONTROL3_TEST(0xfu)
#  define VM050_FLD_CONTROL3_TEST_INC		VM050_FLD_CONTROL3_TEST(1u)
#  define VM050_FLD_CONTROL3_TEST_WALKING	VM050_FLD_CONTROL3_TEST(2u)
#  define VM050_FLD_CONTROL3_TEST_HBAR		VM050_FLD_CONTROL3_TEST(3u)
#  define VM050_FLD_CONTROL3_TEST_VBAR		VM050_FLD_CONTROL3_TEST(4u)
#  define VM050_FLD_CONTROL3_TEST_MOSAIC	VM050_FLD_CONTROL3_TEST(5u)

#  define VM050_FLD_CONTROL3_MIRROR_X		BIT(4)
#  define VM050_FLD_CONTROL3_MIRROR_Y		BIT(5)

#  define VM050_FLD_CONTROL3_DEAD_PIXEL(_m)	((_m) << 8)
#  define VM050_FLD_CONTROL3_DEAD_PIXEL_msk	VM050_FLD_CONTROL3_DEAD_PIXEL(0x1fu)
#  define VM050_FLD_CONTROL3_DEAD_PIXEL_get(_r) (((_r) & VM050_FLD_CONTROL3_DEAD_PIXEL_msk) >> 8)

#  define VM050_FLD_CONTROL3_DEAD_PIXEL_CORR	BIT(13)
#  define VM050_FLD_CONTROL3_MEDIAN_FILTER	BIT(14)

#define VM050_REG_CONTROL4			0x05
#define VM050_REG_CONTROL5			0x06
#define VM050_REG_CONTROL6			0x07
#  define VM050_FLD_CONTROL6_FILTER(_m)		((_m) << 0)
#  define VM050_FLD_CONTROL6_FILTER_msk		VM050_FLD_CONTROL6_FILTER(0xfu)
#  define VM050_FLD_CONTROL6_FILTER_BOX		VM050_FLD_CONTROL6_FILTER(2u)
#  define VM050_FLD_CONTROL6_FILTER_BINOMINAL	VM050_FLD_CONTROL6_FILTER(4u)
#  define VM050_FLD_CONTROL6_FILTER_GAUSSIAN	VM050_FLD_CONTROL6_FILTER(6u)
#  define VM050_FLD_CONTROL6_FILTER_MEDIAN	VM050_FLD_CONTROL6_FILTER(8u)

#  define VM050_FLD_CONTROL6_AVG(_m)		((_m) << 8)
#  define VM050_FLD_CONTROL6_AVG_msk		VM050_FLD_CONTROL6_AVG(0x3u)
#  define VM050_FLD_CONTROL6_AVG_WEAK		VM050_FLD_CONTROL6_AVG(1u)
#  define VM050_FLD_CONTROL6_AVG_MEDIUM		VM050_FLD_CONTROL6_AVG(2u)
#  define VM050_FLD_CONTROL6_AVG_STRONG		VM050_FLD_CONTROL6_AVG(3u)

#define VM050_REG_CONTROL7			0x08
#define VM050_REG_CONTROL8			0x09
#define VM050_REG_CONTROL9			0x0a
#define VM050_REG_CONTROL10			0x0b
#define VM050_REG_CONTROL11			0x0c
#define VM050_REG_CONTROL12			0x0d

#define VM050_REG_CONTROL13			0x0e
#  define VM050_FLD_CONTROL13_GPIO_DIR(_g)	((_g) << 4)
#  define VM050_FLD_CONTROL13_GPIO_DIR_msk	VM050_FLD_CONTROL13_GPIO_DIR(3u)
#  define VM050_FLD_CONTROL13_GPIO_LVL(_g)	((_g) << 6)
#  define VM050_FLD_CONTROL13_GPIO_LVL_msk	VM050_FLD_CONTROL13_GPIO_LVL(3u)
#  define VM050_FLD_CONTROL13_GPIO_msk		(VM050_FLD_CONTROL13_GPIO_DIR_msk | \
						 VM050_FLD_CONTROL13_GPIO_LVL_msk)

#define VM050_REG_OUTPUT_CONTRL			0x0f
#  define VM050_FLD_OUTPUT_CONTRL_DEPTH(_d)	((_d) << 0)
#  define VM050_FLD_OUTPUT_CONTRL_DEPTH_msk	VM050_FLD_OUTPUT_CONTRL_DEPTH(0xfu)
#  define VM050_FLD_OUTPUT_CONTRL_DEPTH_8	VM050_FLD_OUTPUT_CONTRL_DEPTH(0)
#  define VM050_FLD_OUTPUT_CONTRL_DEPTH_10	VM050_FLD_OUTPUT_CONTRL_DEPTH(1)
#  define VM050_FLD_OUTPUT_CONTRL_DEPTH_12	VM050_FLD_OUTPUT_CONTRL_DEPTH(2)
#  define VM050_FLD_OUTPUT_CONTRL_DEPTH_2x8	VM050_FLD_OUTPUT_CONTRL_DEPTH(4)

#  define VM050_FLD_OUTPUT_PCLK_POL		BIT(4)
#  define VM050_FLD_OUTPUT_PERFORMANCE		BIT(5)
#  define VM050_FLD_OUTPUT_ACCURACY		BIT(6)
#  define VM050_FLD_OUTPUT_EMBEDDED_INFO	BIT(12)

#define VM050_REG_RES_X				0x10
#  define VM050_FLD_RES_X(_x)			((_x) << 0)
#  define VM050_FLD_RES_X_msk			VM050_FLD_RES_X(0xffffu)
#  define VM050_FLD_RES_X_get(_r)		(((_r) & VM050_FLD_RES_X_msk) >> 0)

#define VM050_REG_OFFSET_X			0x11
#  define VM050_FLD_OFFSET_X(_x)		((_x) << 0)
#  define VM050_FLD_OFFSET_X_msk		VM050_FLD_OFFSET_X(0xffffu)
#  define VM050_FLD_OFFSET_X_get(_r)		(((_r) & VM050_FLD_OFFSET_X_msk) >> 0)

#define VM050_REG_RES_Y				0x12
#  define VM050_FLD_RES_Y(_y)			((_y) << 0)
#  define VM050_FLD_RES_Y_msk			VM050_FLD_RES_Y(0xffffu)
#  define VM050_FLD_RES_Y_get(_r)		(((_r) & VM050_FLD_RES_Y_msk) >> 0)

#define VM050_REG_OFFSET_Y			0x13
#  define VM050_FLD_OFFSET_Y(_x)		((_x) << 0)
#  define VM050_FLD_OFFSET_Y_msk		VM050_FLD_OFFSET_Y(0xffffu)
#  define VM050_FLD_OFFSET_Y_get(_r)		(((_r) & VM050_FLD_OFFSET_Y_msk) >> 0)

#define VM050_REG_TEMP_WINDOW_SCALE_HI		0x17
#define VM050_REG_TEMP_WINDOW_SCALE_LO		0x18

#define VM050_REG_TEMP_WINDOW_MIN		0x19
#define VM050_REG_TEMP_WINDOW_MAX		0x1a

#define VM050_REG_TEMP_MIN			0x1b
#define VM050_REG_TEMP_MAX			0x1c
#define VM050_REG_TEMP_MEAN			0x1d
#define VM050_REG_TEMP_CENTER			0x1e

#define VM050_REG_TRACK_TEMP_CONF(_t)		(0x20 + (_t))
#  define VM050_FLD_TRACK_TEMP_CONF_PIXNUM(_p)	((_p) << 0)
#  define VM050_FLD_TRACK_TEMP_CONF_PIXNUM_msk	VM050_FLD_TRACK_TEMP_CONF_PIXNUM(0x1fff)
#  define VM050_FLD_TRACK_TEMP_CONF_PIXNUM_get(_n) (((_n) & VM050_FLD_TRACK_TEMP_CONF_PIXNUM_msk) >> 0)

#  define VM050_FLD_TRACK_TEMP_CONF_MODE(_m)	((_m) << 13)
#  define VM050_FLD_TRACK_TEMP_CONF_MODE_msk	VM050_FLD_TRACK_TEMP_CONF_MODE(3u)
#  define VM050_FLD_TRACK_TEMP_CONF_MODE_NONE	VM050_FLD_TRACK_TEMP_CONF_MODE(0u)
#  define VM050_FLD_TRACK_TEMP_CONF_MODE_EQ	VM050_FLD_TRACK_TEMP_CONF_MODE(1u)
#  define VM050_FLD_TRACK_TEMP_CONF_MODE_LE	VM050_FLD_TRACK_TEMP_CONF_MODE(2u)
#  define VM050_FLD_TRACK_TEMP_CONF_MODE_GE	VM050_FLD_TRACK_TEMP_CONF_MODE(3u)
#  define VM050_FLD_TRACK_TEMP_CONF_FLAG	BIT(15)

#define VM050_REG_TRACK_TEMP(_t)		(0x24 + (_t))

#define VM050_REG_TABLE_NO			0x2b
#define VM050_REG_SENSOR_ID_HI			0x2c
#define VM050_REG_SENSOR_ID_LO			0x2d
#define VM050_REG_SERIAL_HI			0x2e
#define VM050_REG_SERIAL_LO			0x2f

#define VM050_REG_STATUS1			0x30
#  define VM050_FLD_STATUS1_INIT		BIT(0)
#  define VM050_FLD_STATUS1_POLLING		BIT(1)
#  define VM050_FLD_STATUS1_READOUT		BIT(2)
#  define VM050_FLD_STATUS1_PROCESS		BIT(3)
#  define VM050_FLD_STATUS1_OUTPUT		BIT(4)
#  define VM050_FLD_STATUS1_LIVE		BIT(5)
#  define VM050_FLD_STATUS1_VDD			BIT(6)

#define VM050_REG_STATUS2			0x31
#  define VM050_FLD_STATUS2_BLOCK(_b)		((_b) << 0)
#  define VM050_FLD_STATUS2_SLEEP		BIT(4)
#  define VM050_FLD_STATUS2_SAMPLE		BIT(5)
#  define VM050_FLD_STATUS2_INIT		BIT(6)
#  define VM050_FLD_STATUS2_TIMEOUT		BIT(7)
#  define VM050_FLD_STATUS2_POWERON		BIT(8)

#define VM050_REG_STATUS3			0x32
#  define VM050_FLD_STATUS3_RD(_e)		((_e) << 0)
#  define VM050_FLD_STATUS3_RD_msk		VM050_FLD_STATUS3_RD(0xfu)
#  define VM050_FLD_STATUS3_RD_OK		VM050_FLD_STATUS3_RD(0u)
#  define VM050_FLD_STATUS3_RD_ERROR		VM050_FLD_STATUS3_RD(1u)
#  define VM050_FLD_STATUS3_RD_BUSY		VM050_FLD_STATUS3_RD(2u)
#  define VM050_FLD_STATUS3_RD_TIMEOUT		VM050_FLD_STATUS3_RD(3u)
#  define VM050_FLD_STATUS3_WR(_e)		((_e) << 4)
#  define VM050_FLD_STATUS3_WR_msk		VM050_FLD_STATUS3_WR(0xfu)
#  define VM050_FLD_STATUS3_WR_OK		VM050_FLD_STATUS3_WR(0u)
#  define VM050_FLD_STATUS3_WR_ERROR		VM050_FLD_STATUS3_WR(1u)
#  define VM050_FLD_STATUS3_WR_BUSY		VM050_FLD_STATUS3_WR(2u)
#  define VM050_FLD_STATUS3_WR_TIMEOUT		VM050_FLD_STATUS3_WR(3u)
#  define VM050_FLD_STATUS3_ERRCNT(_e)		((_e) << 8)
#  define VM050_FLD_STATUS3_ERRCNT_msk		VM050_FLD_STATUS3_ERRCNT(0xfu)

#define VM050_REG_HTPA_MBIT_TRIM		0x40
#  define VM050_FLD_HTPA_MBIT_TRIM(_x)		((_x) << 0)
#  define VM050_FLD_HTPA_MBIT_TRIM_msk		VM050_FLD_HTPA_MBIT_TRIM(0xf)

#define VM050_REG_HTPA_BIAS_TOP_TRIM		0x41
#  define VM050_FLD_HTPA_BIAS_TOP_TRIM(_x)	((_x) << 0)
#  define VM050_FLD_HTPA_BIAS_TOP_TRIM_msk	VM050_FLD_HTPA_BIAS_TOP_TRIM(0x0fu)

#define xVM050_REG_HTPA_BIAS_BOT_TRIM		0x42
#  define VM050_FLD_HTPA_BIAS_BOT_TRIM(_x)	((_x) << 0)
#  define VM050_FLD_HTPA_BIAS_BOT_TRIM_msk	VM050_FLD_HTPA_BIAS_BOT_TRIM(0x0fu)

#define VM050_REG_HTPA_CLK_TRIM			0x43
#  define VM050_FLD_HTPA_CLK_TRIM(_x)		((_x) << 0)
#  define VM050_FLD_HTPA_CLK_TRIM_msk		VM050_FLD_HTPA_CLK_TRIM(0x0fu)

#define VM050_REG_HTPA_TOP_TRIM			0x44
#  define VM050_FLD_HTPA_TOP_TRIM(_x)		((_x) << 0)
#  define VM050_FLD_HTPA_TOP_TRIM_msk		VM050_FLD_BPA_TOP_TRIM(0x0fu)

#define VM050_REG_HTPA_BOT_TRIM			0x45
#  define VM050_FLD_HTPA_BOT_TRIM(_x)		((_x) << 0)
#  define VM050_FLD_HTPA_BOT_TRIM_msk		VM050_FLD_BPA_BOT_TRIM(0x0fu)

#define VM050_REG_HTPA_PU_TRIM			0x46
#  define VM050_FLD_HTPA_PU_TRIM(_x)		((_x) << 0)
#  define VM050_FLD_HTPA_PU_TRIM_msk		VM050_FLD_HTPA_PU_TRIM(0x0fu)

#define VM050_REG_DEAD_PIX_ADDR(_d)		(0x4a + (_d))

#define VM050_NUM_DEAD_PIX_MAX			(24u)

#endif	/* H_LINUX_DRIVERS_MEDIA_I2C_VM050_REGS_H */
